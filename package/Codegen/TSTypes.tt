<#@ template language="C#" inherits="Generator" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
import type {
<# foreach (var type in Types.Where(t => Util.HasCtor(t))) { #>
    Native<#= type.GetName() #>Props,
<# } #>
} from './Props';
import React from 'react';
import { NativeXamlControl } from './NativeXamlControl';


<# foreach (var type in Types.Where(t => Util.HasCtor(t))) { #>
export type <#= type.GetName() #>Props = Omit<Native<#= type.GetName()#>Props, 'type'>;

export const <#= type.GetName() #>: React.FC<<#= type.GetName() #>Props> = (props: <#= type.GetName() #>Props) => {
    return (
        <NativeXamlControl type="<#= Util.ToJsName(type.GetName()) #>" {...props} />
    );
};
<# } #>
