// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Codegen
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TypeEvents : Generator
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"#include ""pch.h""
#include ""XamlMetadata.h""
#include ""Serialize.h""
#include ""Crc32Str.h""
#include <JSValueWriter.h>

/*************************************************************
THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY MANUALLY
**************************************************************/

");
            
            #line 16 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 foreach (var ns in Events.Select(p => p.DeclaringType.GetNamespace()).Distinct()) { 
            
            #line default
            #line hidden
            this.Write("#include <winrt/");
            
            #line 17 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ns));
            
            #line default
            #line hidden
            this.Write(".h>\r\n");
            
            #line 18 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"#include <winrt/Windows.UI.Xaml.Input.h>

/////// Events
template<typename TArgs>
void SerializeEventArgs(winrt::Microsoft::ReactNative::IJSValueWriter const& writer, const winrt::Windows::Foundation::IInspectable& sender, const TArgs& args);

/*static*/ const EventInfo EventInfo::xaml");
            
            #line 25 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write("EventMap[] = {\r\n");
            
            #line 26 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 foreach (var evt in Events) { 
            
            #line default
            #line hidden
            this.Write("  {\"");
            
            #line 27 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(evt.GetName()));
            
            #line default
            #line hidden
            this.Write("\", [](const winrt::Windows::Foundation::IInspectable& ii, const IReactContext& re" +
                    "actContext, bool isWrapped) {\r\n  winrt::Windows::Foundation::IInspectable o = (i" +
                    "sWrapped) ? ii.as<ContentControl>().Content() : ii;\r\n  if (auto c = o.try_as<");
            
            #line 29 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetCppWinRTType(evt.DeclaringType)));
            
            #line default
            #line hidden
            this.Write(">()) {\r\n        c.");
            
            #line 30 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(evt.GetName()));
            
            #line default
            #line hidden
            this.Write("([reactContext, ii] (");
            
            #line 30 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetCppWinRTEventSignature(evt)));
            
            #line default
            #line hidden
            this.Write(") {\r\n            if (auto fe = sender ? sender.try_as<xaml::FrameworkElement>() :" +
                    " \r\n            (ii ? ii.try_as<xaml::FrameworkElement>() : nullptr)) {\r\n        " +
                    "      reactContext.DispatchEvent(fe, L\"top");
            
            #line 33 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(evt.GetName()));
            
            #line default
            #line hidden
            this.Write("\", [sender, args](winrt::Microsoft::ReactNative::IJSValueWriter const& evtDataWri" +
                    "ter) noexcept {\r\n                SerializeEventArgs(evtDataWriter, sender, args)" +
                    ";\r\n              });\r\n            }\r\n        });\r\n    }\r\n    } },\r\n");
            
            #line 40 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n};\r\n\r\nstatic_assert(ARRAYSIZE(EventInfo::xaml");
            
            #line 44 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write("EventMap) == ");
            
            #line 44 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Events.Count()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 46 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 if (Name != "") { 
            
            #line default
            #line hidden
            this.Write("#define RNX_HAS_CUSTOM_EVENTS\r\n");
            
            #line 48 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TypeEvents.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
