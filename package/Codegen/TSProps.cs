// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Codegen
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TSProps : Generator
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("import type { ViewProps, NativeSyntheticEvent, ColorValue } from \'react-native\';\r" +
                    "\nimport type * as Enums from \'./Enums\';\r\n\r\nexport type Thickness = number | { le" +
                    "ft: number, top: number, right: number, bottom: number };\r\n\r\n");
            
            #line 11 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 var derived = Util.GetDerivedTypes(Types);
foreach (var type in Types) { 
            
            #line default
            #line hidden
            this.Write("\r\nexport interface Native");
            
            #line 14 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GetName()));
            
            #line default
            #line hidden
            this.Write("Props extends ");
            
            #line 14 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetBaseClassProps(type)));
            
            #line default
            #line hidden
            this.Write(" {\r\n");
            
            #line 15 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 var typeProp = Util.GetJsTypeProperty(type, derived);
if (typeProp != "") { 
            
            #line default
            #line hidden
            this.Write("  type: ");
            
            #line 17 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeProp));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 18 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 }
foreach (var prop in type.GetProperties().Where(p => Util.ShouldEmitPropertyMetadata(p))) { 
            
            #line default
            #line hidden
            this.Write("  ");
            
            #line 20 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.ToJsName(prop.GetName())));
            
            #line default
            #line hidden
            this.Write("?: ");
            
            #line 20 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Util.GetTypeScriptType(prop.GetPropertyType())));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 21 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 } 
  foreach (var evt in type.GetEvents()) { 
            
            #line default
            #line hidden
            this.Write("  on");
            
            #line 23 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(evt.GetName()));
            
            #line default
            #line hidden
            this.Write("?: (event: NativeSyntheticEvent<undefined>) => void;\r\n");
            
            #line 24 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 } 
            
            #line default
            #line hidden
            this.Write("}\r\n\r\n");
            
            #line 27 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nexport type XamlControlProps =");
            
            #line 29 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 var first = true; foreach (var type in Types) {
	if (Util.HasCtor(type) || !type.IsSealed) {
		if (!first) 
            
            #line default
            #line hidden
            this.Write(" | ");
            
            #line 31 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 ;
		
		first = false;
		
            
            #line default
            #line hidden
            this.Write(" Native");
            
            #line 34 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GetName()));
            
            #line default
            #line hidden
            this.Write("Props \r\n\t");
            
            #line 35 "C:\Users\asklar\source\repos\react-native-xaml\package\Codegen\TSProps.tt"
 }
	} 
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
